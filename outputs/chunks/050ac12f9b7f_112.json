{
  "content": "MP=$(date +\"%Y%m%d_%H%M%S\")\n  SAFE_TITLE=$(echo \"$CHAT_TITLE\" | tr -cd '[:alnum:] _-' | tr ' ' '_')\n  OUTPUT_FILE=\"$EXPORT_DIR/${SAFE_TITLE}_${TIMESTAMP}.$FORMAT\"\n\n  echo -e \"${CYAN}Processing chat...${NC}\"\n  case \"$FORMAT\" in\n    md)\n      export_markdown \"$TMP_FILE\" \"$OUTPUT_FILE\" \"$CHAT_TITLE\"\n      ;;\n    json)\n      # TODO: Real JSON export parsing here\n      echo \"{\\\"title\\\": \\\"$CHAT_TITLE\\\", \\\"messages\\\": []}\" > \"$OUTPUT_FILE\"\n      ;;\n    txt)\n      {\n        echo \"$CHAT_TITLE\"\n        echo \"Exported on: $(date)\"\n        echo\n        cat \"$TMP_FILE\"\n      } > \"$OUTPUT_FILE\"\n      ;;\n  esac\n\n  echo -e \"${GREEN}âœ… Chat exported to: $OUTPUT_FILE${NC}\"\n\n  while true; do\n    echo \"Do you want to process this file with your RAG tools? (y/n)\"\n    read -r PROCESS_CHOICE\n    case \"$PROCESS_CHOICE\" in\n      [Yy]* )\n        echo \"ðŸš€ Running file_chunker.py...\"\n        python3 \"$PYTHON_DIR/file_chunker.py\" \"$OUTPUT_FILE\" --output \"$CHUNKS_DIR\"\n\n        echo \"Do you want to generate summaries as well? (y/n)\"\n        read -r SUMMARY_CHOICE\n        if [[ \"$SUMMARY_CHOICE\" =~ ^[Yy]$ ]]; then\n          echo \"ðŸ“š Running file_summarizer.py...\"\n          python3 \"$PYTHON_DIR/file_summarizer.py\" \"$CHUNKS_DIR\" --output \"$SUMMARIES_DIR\"\n        fi\n\n        echo -e \"${GREEN}âœ… Processing complete!${NC}\"\n        break\n        ;;\n      [Nn]* )\n        echo \"Skipping processing.\"\n        break\n        ;;\n      * )\n        echo -e \"${RED}Please answer y or n.${NC}\"\n        ;;\n    esac\n  done\n}\n\n# === Main ===\nclear\nshow_instructions\nprocess_file\necho -e \"${GREEN}ðŸŽ‰ Done! You can now use chunk_searcher.py and mcp_helper.py.${NC}\"\nIf you'd like, I can provide a fully refactored and tested script based on this approach. Would you want me to do that?\n\nYou said:\nYes, provide the fully refactored and tested script\nChatGPT said:\nGot it! Hereâ€™s the fully refactored, robust, and user-friendly version of your export_chat.sh script with colorized output, input validation, modular functions, and safer ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_112",
    "start_char": 201600,
    "end_char": 203600,
    "created_at": "2025-05-21T08:41:32+00:00"
  }
}