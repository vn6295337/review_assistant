{
  "content": ", f\"{filename}.md\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            f.write(format_as_markdown(messages, title))\n    \n    else:  # txt format\n        filepath = os.path.join(output_dir, f\"{filename}.txt\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            f.write(format_as_text(messages, title))\n    \n    return filepath\n\ndef extract_code_snippets(messages, output_dir):\n    \"\"\"Extract code snippets to separate files.\"\"\"\n    code_dir = os.path.join(output_dir, \"code_snippets\")\n    Path(code_dir).mkdir(exist_ok=True)\n    \n    code_files = []\n    code_pattern = r'\n(\\w*)\\n(.*?)\\n\n'\n    \n    for i, msg in enumerate(messages):\n        snippets = re.findall(code_pattern, msg[\"content\"], re.DOTALL)\n        \n        for j, (lang, code) in enumerate(snippets):\n            if not lang.strip():\n                lang = \"txt\"  # Default extension if language not specified\n                \n            # Create filename\n            timestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n            filename = f\"snippet_{i}_{j}_{timestamp}.{lang}\"\n            filepath = os.path.join(code_dir, filename)\n            \n            # Save code to file\n            with open(filepath, 'w', encoding='utf-8') as f:\n                f.write(code)\n            \n            code_files.append(filepath)\n    \n    return code_files\n\ndef main():\n    args = parse_args()\n    \n    # Get chat title if not provided\n    title = args.title\n    if not title:\n        title = input(\"Enter a title for this chat export (or press Enter for default): \")\n        if not title:\n            title = \"Claude Chat Export\"\n    \n    # Create output directory\n    if not create_output_directory(args.output_dir):\n        alt_dir = os.path.expanduser(\"~/Downloads\")\n        print(f\"Using alternative directory: {alt_dir}\")\n        args.output_dir = alt_dir\n        create_output_directory(args.output_dir)\n    \n    # Get and process chat content\n    content = get_chat_content()\n    if not ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_153",
    "start_char": 275400,
    "end_char": 277400,
    "created_at": "2025-05-21T08:41:33+00:00"
  }
}