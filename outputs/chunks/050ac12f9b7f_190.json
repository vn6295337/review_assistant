{
  "content": "--------------------------------\nCore Script: file_chunker.py\n\nDescription:\nfile_chunker.py ─ Break large files into overlapping JSON chunks\n----------------------------------------------------------------\n* Pure‑Python; zero external dependencies\n* Defaults come from scripts/config.sh (if available) but can be overridden\n* Adds rich metadata (source path, char offsets, timestamp, SHA256 of content)\n\nCommand line arguments: Uses argparse for command-line arguments\n\nFunctions:\n- chunk_text: Return a list of chunk dicts ready for JSON serialisation.\n- write_chunks: Write each chunk as a separate JSON file; return # actually written.\n- parse_cli\n- main\n\nMain function: main\n\n\n----------------------------------------\nCore Script: file_summarizer.py\n\nDescription:\nFile Summarizer Script\n\nThis script processes chunked JSON files and extracts their content for summarization.\nIt's part of a local RAG workflow to handle large content files efficiently.\n[Warning: Could not parse the full script due to syntax error]\n\nCommand line arguments: Uses argparse for command-line arguments\n\nScript has a __name__ == '__main__' block for direct execution\n\n----------------------------------------\nCore Script: chunk_searcher.py\n\nDescription:\nchunk_searcher.py - Search through chunked code files using keyword matching\n\nCommand line arguments: Uses argparse for command-line arguments\n\nFunctions:\n- parse_args: Parse command line arguments.\n- load_chunks: Load all chunks from the chunks directory.\n- search_chunks: Search for the query in the chunks.\n- highlight_matches: Highlight matches in the content.\n- search_command_handler: Handle the search command.\n- main: Main function.\n\nMain function: main\n\n\n----------------------------------------\nCore Script: mcp_helper.py\n\nDescription:\nMaster Content Prompt Helper\n\nThis script assembles summarized chunks into a unified prompt\nfor use with AI assistants in a local RAG workflow.\n\nCommand line arguments: Uses argparse for command-line arguments\n\nFunctio",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_190",
    "start_char": 342000,
    "end_char": 344000,
    "created_at": "2025-05-21T08:41:33+00:00"
  }
}