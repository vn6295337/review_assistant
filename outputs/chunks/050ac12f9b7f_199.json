{
  "content": "\n        output_dir (str): Directory to save the summary output\n\n    Returns:\n        bool: True if successful, False otherwise\n    \"\"\"\n    try:\n        os.makedirs(output_dir, exist_ok=True)\n        base_name = os.path.basename(input_file)\n        output_file = os.path.join(output_dir, f\"summary_{base_name}\")\n\n        with open(input_file, 'r', encoding='utf-8') as f:\n            chunk_data = json.load(f)\n\n        content = chunk_data.get('content')\n        if content is None:\n            print(f\"⚠ Error: 'content' field missing in {input_file}\")\n            return False\n\n        chunk_id = chunk_data.get('chunk_id', 'unknown')\n        source_file = chunk_data.get('file', 'unknown')\n        chunk_id_str = chunk_data.get('id', 'unknown')\n\n        lines = content.strip().splitlines()\n        preview = \"\\n\".join(lines[:20])              # first 20 lines\n        preview = preview.lstrip(\"{` \")              # strip leading { or ``` if present\n\n        plain_text_summary = (\n            f\"### Chunk {chunk_id} — {os.path.basename(source_file)}\\n\\n\"\n            f\"{preview}\\n\\n…\"\n        )\n\n        summary_data = {\n            \"source_file\": input_file,\n            \"summary\": plain_text_summary\n        }\n\n        with open(output_file, 'w', encoding='utf-8') as f:\n            json.dump(summary_data, f, indent=2)\n\n        print(f\"✓ Summary created: {output_file}\")\n        return True\n\n    except Exception as e:\n        print(f\"⚠ Error processing {input_file}: {e}\")\n        return False\n\n\ndef process_directory(input_dir, output_dir, verbose=False):\n    \"\"\"\n    Process all JSON files in a directory.\n\n    Args:\n        input_dir (str): Directory containing JSON chunk files\n        output_dir (str): Directory to save summary files\n        verbose (bool): Whether to print verbose output\n\n    Returns:\n        int: Number of successfully processed files\n    \"\"\"\n    if verbose:\n        print(f\"Processing directory: {input_dir}\")\n        print(f\"Output directory: {output_dir}\")\n\n    ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_199",
    "start_char": 358200,
    "end_char": 360200,
    "created_at": "2025-05-21T08:41:33+00:00"
  }
}