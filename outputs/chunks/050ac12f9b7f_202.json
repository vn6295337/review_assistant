{
  "content": "rror: 'content' field missing in {input_file}\")\n            return False\n\n        chunk_id = chunk_data.get('chunk_id', 'unknown')\n        source_file = chunk_data.get('file', 'unknown')\n\n        # Summarize\n        summary_text = summarize_text(content)\n\n        summary_data = {\n            \"source_file\": input_file,\n            \"chunk_id\": chunk_id,\n            \"summary\": summary_text\n        }\n\n        with open(output_file, 'w', encoding='utf-8') as f:\n            json.dump(summary_data, f, indent=2)\n\n        print(f\"✓ Summary created: {output_file}\")\n        return True\n\n    except Exception as e:\n        print(f\"⚠ Error processing {input_file}: {e}\")\n        return False\n\n\ndef process_directory(input_dir, output_dir, verbose=False):\n    if verbose:\n        print(f\"Processing directory: {input_dir}\")\n        print(f\"Output directory: {output_dir}\")\n\n    if not os.path.isdir(input_dir):\n        print(f\"⚠ Input directory does not exist: {input_dir}\")\n        return 0\n\n    os.makedirs(output_dir, exist_ok=True)\n    success_count = 0\n    file_count = 0\n\n    for filename in sorted(os.listdir(input_dir)):\n        if filename.endswith('.json'):\n            file_count += 1\n            input_file = os.path.join(input_dir, filename)\n            if summarize_chunk(input_file, output_dir):\n                success_count += 1\n\n    if verbose:\n        print(\"\\nSummary Generation Complete\")\n        print(f\"Processed {file_count} files\")\n        print(f\"Successfully summarized {success_count} files\")\n\n    return success_count\n\n\ndef main():\n    parser = argparse.ArgumentParser(\n        description='Generate summaries from JSON chunk files using a model'\n    )\n    parser.add_argument('--input-dir', '-i', required=True,\n                        help='Directory containing chunked JSON files')\n    parser.add_argument('--output-dir', '-o', required=True,\n                        help='Directory to save summaries')\n    parser.add_argument('--verbose', '-v', action='store_true',\n        ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_202",
    "start_char": 363600,
    "end_char": 365600,
    "created_at": "2025-05-21T08:41:33+00:00"
  }
}