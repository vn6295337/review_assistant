{
  "content": "e:\n            print(\"⚠ No template variables found in template file\")\n            \n        return unique_vars\n    except Exception as e:\n        print(f\"❌ Error analyzing template file {template_path}: {str(e)}\")\n        return []\n\ndef check_prompt_content(prompt_path):\n    \"\"\"Check content of a generated prompt file.\"\"\"\n    try:\n        with open(prompt_path, 'r', encoding='utf-8') as f:\n            content = f.read()\n            \n        print(f\"ℹ Prompt content (first 500 chars):\\n\")\n        print(content[:500])\n        \n        # Check for unreplaced template variables\n        import re\n        template_vars = re.findall(r'\\{([a-zA-Z0-9_]+)\\}', content)\n        if template_vars:\n            print(f\"\\n⚠ Unreplaced template variables found: {template_vars}\")\n            \n        # Check for raw JSON content that should have been extracted\n        json_fragments = re.findall(r'\"source_file\":|\"summary\":', content)\n        if json_fragments:\n            print(f\"\\n⚠ JSON fragments found in prompt content. The summary extraction may not be working correctly.\")\n            \n        return content\n    except Exception as e:\n        print(f\"❌ Error reading prompt file {prompt_path}: {str(e)}\")\n        return None\n\ndef main():\n    \"\"\"Main function to check the RAG workflow setup.\"\"\"\n    # Check environment setup\n    print_section_header(\"Checking Environment Setup\")\n    check_directory(ROOT_DIR)\n    check_directory(PYTHON_DIR)\n    check_directory(TEMPLATES_DIR)\n    check_directory(SUMMARIES_DIR)\n    check_directory(CHUNKS_RAW_DIR)\n    check_directory(CHUNKS_OUTPUT_DIR)\n    check_directory(PROMPTS_DIR)\n    \n    # Check Python scripts\n    print_section_header(\"Checking Python Scripts\")\n    check_file(os.path.join(PYTHON_DIR, \"file_chunker.py\"))\n    check_file(os.path.join(PYTHON_DIR, \"file_summarizer.py\"))\n    check_file(os.path.join(PYTHON_DIR, \"mcp_helper.py\"))\n    \n    # Check template file\n    print_section_header(\"Checking Template File\")\n    template_file = os.path.jo",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_140836.txt",
    "chunk_id": "050ac12f9b7f_86",
    "start_char": 154800,
    "end_char": 156800,
    "created_at": "2025-05-21T08:41:32+00:00"
  }
}