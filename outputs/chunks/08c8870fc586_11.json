{
  "content": " 1\n    }\n\n\nWith:\nbash\n    if [ ! -f \"$source_file\" ]; then\n      echo -e \"${RED}❌ Source file does not exist: $source_file${NC}\"\n      exit 1\n    fi\n\n\n#### Add Memory-Efficient Processing for Large Files\n\nFor very large files, add a streaming option:\nbash\nprocess_large_file() {\n  local source_file=\"$1\"\n  local chunk_size=\"$2\"\n  local overlap=\"$3\"\n  \n  echo \"Processing large file in streaming mode...\"\n  \n  # Process the file in 10MB chunks\n  split -b 10M \"$source_file\" \"${TMP_DIR}/split_\"\n  \n  for split_file in \"${TMP_DIR}/split_\"*; do\n    python3 \"${PYTHON_DIR}/file_chunker.py\" \\\n      --input-file \"$split_file\" \\\n      --output-dir \"$CHUNKS_DIR\" \\\n      --chunk-size \"$chunk_size\" \\\n      --overlap \"$overlap\" \\\n      --append-mode \\\n      --verbose\n    rm \"$split_file\"  # Remove processed split\n  done\n}\n\n\n### 5. Session Persistence\n\nAdd a session management feature to remember context between runs:\n\nbash\n# session.sh - Manage RAG Assistant sessions\n\nSESSION_DIR=\"${RAG_ROOT}/sessions\"\nCURRENT_SESSION_FILE=\"${SESSION_DIR}/.current_session\"\nmkdir -p \"$SESSION_DIR\"\n\n# Create a new session\ncreate_session() {\n  local session_name=\"$1\"\n  local session_dir=\"${SESSION_DIR}/${session_name}\"\n  \n  if [ -d \"$session_dir\" ]; then\n    echo \"Session already exists: $session_name\"\n    return 1\n  fi\n  \n  mkdir -p \"${session_dir}/chunks\"\n  mkdir -p \"${session_dir}/summaries\"\n  mkdir -p \"${session_dir}/prompts\"\n  echo \"Created session: $session_name\"\n  \n  # Set as current session\n  echo \"$session_name\" > \"$CURRENT_SESSION_FILE\"\n}\n\n# List available sessions\nlist_sessions() {\n  echo \"Available sessions:\"\n  for dir in \"$SESSION_DIR\"/*; do\n    if [ -d \"$dir\" ]; then\n      session_name=$(basename \"$dir\")\n      if [ -f \"$CURRENT_SESSION_FILE\" ] && [ \"$(cat \"$CURRENT_SESSION_FILE\")\" = \"$session_name\" ]; then\n        echo \"* $session_name (current)\"\n      else\n        echo \"  $session_name\"\n      fi\n    fi\n  done\n}\n\n# Switch to a session\nswitch_session() {\n  local session_name=\"$1\"\n  local ses",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_11",
    "start_char": 19800,
    "end_char": 21800,
    "created_at": "2025-05-21T07:21:39+00:00"
  }
}