{
  "content": "    os.makedirs(cache_dir, exist_ok=True)\n    \n    # Hash the chunks directory to identify this set of chunks\n    dir_hash = hashlib.md5(chunks_dir.encode()).hexdigest()\n    cache_file = os.path.join(cache_dir, f\"embeddings_{dir_hash}.pkl\")\n    \n    # Check if cache exists and is newer than the chunks\n    if os.path.exists(cache_file):\n        cache_mtime = os.path.getmtime(cache_file)\n        chunks_latest = max([os.path.getmtime(os.path.join(chunks_dir, f)) \n                           for f in os.listdir(chunks_dir) if f.endswith('.json')])\n        \n        if cache_mtime > chunks_latest:\n            # Cache is newer than the latest chunk\n            print(\"Using cached embeddings\")\n            with open(cache_file, 'rb') as f:\n                return pickle.load(f)\n    \n    # Compute embeddings\n    embeddings = compute_embeddings(chunks_dir)\n    \n    # Save to cache\n    with open(cache_file, 'wb') as f:\n        pickle.dump(embeddings, f)\n    \n    return embeddings\n\n\n### 9. Add Chat History Integration\n\nCreate a function to integrate chat history for easier follow-up:\n\npython\ndef extract_chat_insights(chat_file, output_file):\n    \"\"\"Extract key insights from an AI chat session\"\"\"\n    with open(chat_file, 'r') as f:\n        chat_text = f.read()\n    \n    # Find sections that look like insights or conclusions\n    import re\n    \n    # Look for sections like \"Key insights:\", \"In conclusion:\", etc.\n    insight_patterns = [\n        r\"(?:Key insights|Main findings|Key points|Important points|Conclusion|Summary):\\s*(.*?)(?:\\n\\n|\\Z)\",\n        r\"(?:•|\\*|\\d+\\.)\\s+(.*?)(?:\\n(?:•|\\*|\\d+\\.)|$)\"\n    ]\n    \n    insights = []\n    for pattern in insight_patterns:\n        matches = re.findall(pattern, chat_text, re.DOTALL | re.IGNORECASE)\n        insights.extend(matches)\n    \n    # Write insights to file\n    with open(output_file, 'w') as f:\n        f.write(\"# Extracted Insights\\n\\n\")\n        for idx, insight in enumerate(insights, 1):\n            f.write(f\"{idx}. {insight.strip()}\\n\\",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_13",
    "start_char": 23400,
    "end_char": 25400,
    "created_at": "2025-05-21T07:21:39+00:00"
  }
}