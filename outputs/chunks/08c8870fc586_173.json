{
  "content": "✅ Updated chat_exporter.py\nUpdated to dynamically read config from the environment. Here’s the full code:\n\n#!/usr/bin/env python3\n\"\"\"\nchat_exporter.py - Interactive chat session ingestor for the RAG pipeline.\n\n1. Opens a blank nano buffer.\n2. User pastes the chat and exits nano.\n3. The content is saved to codebase/chat_sessions/ as a timestamped file.\n4. The file is passed to file_chunker.py → outputs/chunks/\n5. Then to file_summarizer.py → outputs/summaries/\n\"\"\"\n\nimport os\nimport subprocess\nimport shutil\nimport datetime\nfrom pathlib import Path\nimport argparse\nimport sys\n\n# === Load environment-based configuration ===\ndef require_env(key):\n    val = os.environ.get(key)\n    if not val:\n        print(f\"❌ Environment variable '{key}' is not set. Did you source config.sh?\")\n        sys.exit(1)\n    return Path(val)\n\nCHAT_SESSIONS_DIR = require_env(\"CHAT_SESSIONS_DIR\")\nCHUNKS_DIR = require_env(\"CHUNKS_DIR\")\nSUMMARIES_DIR = require_env(\"SUMMARIES_DIR\")\nPYTHON_DIR = require_env(\"PYTHON_DIR\")\n\nFILE_CHUNKER = PYTHON_DIR / \"file_chunker.py\"\nFILE_SUMMARIZER = PYTHON_DIR / \"file_summarizer.py\"\n\n\ndef open_nano(tmp_file: Path):\n    try:\n        subprocess.run([\"nano\", str(tmp_file)])\n        return True\n    except FileNotFoundError:\n        print(\"❌ nano not found. Install it with `sudo apt install nano`.\")\n        return False\n\n\ndef is_file_nonempty(path: Path) -> bool:\n    return path.exists() and path.stat().st_size > 5\n\n\ndef run_python(script: Path, *args):\n    cmd = [sys.executable, str(script), *map(str, args)]\n    result = subprocess.run(cmd)\n    if result.returncode != 0:\n        raise RuntimeError(f\"Helper script failed: {' '.join(cmd)}\")\n\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"Paste chat via nano and run RAG workflow.\")\n    parser.add_argument(\"--title\", type=str, default=\"Chat\",\n                        help=\"Base filename prefix (default: Chat)\")\n    args = parser.parse_args()\n\n    # Ensure directories exist\n    CHAT_SESSIONS_DIR.mkdir(parents=T",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_173",
    "start_char": 311400,
    "end_char": 313400,
    "created_at": "2025-05-21T07:21:40+00:00"
  }
}