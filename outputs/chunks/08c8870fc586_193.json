{
  "content": "\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nCONFIG_FILE=\"${SCRIPT_DIR}/config.sh\"        # config.sh lives in same folder\nif [ ! -f \"$CONFIG_FILE\" ]; then\n  echo \"❌ config.sh not found at: $CONFIG_FILE\"\n  exit 1\nfi\n# shellcheck source=/dev/null\nsource \"$CONFIG_FILE\"                         # sets RAG_ROOT, PYTHON_DIR, etc.\n\n# ─── Title (first CLI arg or default) ─────────────────────────────────\nTITLE=\"${1:-Chat}\"\n\necho \"🚀  Starting RAG workflow for: $TITLE\"\ncd \"$PYTHON_DIR\"\n\n# ─── 1. Chat ingestion via nano ──────────────────────────────────────\npython3 chat_exporter.py --title \"$TITLE\"\n\n# ─── 2. Identify newest chat file ────────────────────────────────────\nLATEST_CHAT_FILE=$(ls -t \"$CHAT_SESSIONS_DIR\"/*.{md,txt,json} 2>/dev/null | head -n 1)\nif [[ ! -f \"$LATEST_CHAT_FILE\" ]]; then\n  echo \"❌  No chat file found in $CHAT_SESSIONS_DIR . Aborting.\"\n  exit 1\nfi\necho \"✅  Latest chat file: $LATEST_CHAT_FILE\"\n\n# ─── 3. Chunking ─────────────────────────────────────────────────────\necho \"🔪  Chunking chat file…\"\npython3 \"$PYTHON_DIR/file_chunker.py\" \\\n        --input-file \"$LATEST_CHAT_FILE\" \\\n        --output-dir \"$CHUNKS_DIR\" \\\n        --chunk-size \"$DEFAULT_CHUNK_SIZE\" \\\n        --overlap \"$DEFAULT_OVERLAP\"\n\n# ─── 4. Summarisation ────────────────────────────────────────────────\necho \"🧠  Summarising chunks…\"\npython3 \"$PYTHON_DIR/file_summarizer.py\" \\\n        --input-dir \"$CHUNKS_DIR\" \\\n        --output-dir \"$SUMMARIES_DIR\"\n\n# ─── 5. Prompt generation ────────────────────────────────────────────\necho \"📝  Generating final MCP prompt…\"\npython3 \"$PYTHON_DIR/mcp_helper.py\" \\\n        --template-file \"$DEFAULT_TEMPLATE\" \\\n        --summaries-dir \"$SUMMARIES_DIR\" \\\n        --output-dir \"$PROMPTS_DIR\" \\\n        --title \"$TITLE – $(date +%F)\"\n\n# ─── 6. Open newest prompt in nano ───────────────────────────────────\nLATEST_PROMPT=$(ls -t \"$PROMPTS_DIR\"/*.txt 2>/dev/null | head -n 1)\nif [[ -f \"$LATEST_PROMPT\" ]]; then\n  echo \"📂  Opening prompt in nano → $LATEST_PROMPT\"\n  nano \"$",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_193",
    "start_char": 347400,
    "end_char": 349400,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}