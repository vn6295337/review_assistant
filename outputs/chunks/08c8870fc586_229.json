{
  "content": "– Summaries\n# ───────────────────────────────────────────────────────────\necho -e \"\\n${BLUE}Step 2 • Generating summaries…${NC}\"\n\nsummary_count=$(find \"$SUMMARIES_DIR\" -type f -name \"summary_*.json\" | wc -l)\nif [[ \"$summary_count\" -gt 0 ]]; then\n  read -rp \"$(echo -e \"${BLUE}$summary_count summaries exist. Re‑generate all? (y/n) ${NC}\")\" regen\n  if [[ \"$regen\" =~ ^[Yy]$ ]]; then\n    echo -e \"${YELLOW}Deleting old summaries…${NC}\"\n    rm -f \"${SUMMARIES_DIR}\"/summary_*.json\n  fi\nfi\n\necho -e \"${GREEN}→ Running summariser…${NC}\"\npython3 \"${PYTHON_DIR}/file_summarizer.py\" \\\n    --input-dir \"$CHUNKS_DIR\" \\\n    --output-dir \"$SUMMARIES_DIR\" \\\n    --skip-existing \\\n    --verbose\n\n# ───────────────────────────────────────────────────────────\n# 7.  STEP 3 – Build master prompt\n# ───────────────────────────────────────────────────────────\necho -e \"\\n${BLUE}Step 3 • Building master prompt…${NC}\"\nread -rp \"$(echo -e \"${BLUE}Title for this review [enter for default]: ${NC}\")\" review_title\nreview_title=${review_title:-\"Content Analysis $(date +%Y-%m-%d)\"}\n\npython3 \"${PYTHON_DIR}/mcp_helper.py\" \\\n    --summaries-dir \"$SUMMARIES_DIR\" \\\n    --template-file \"$DEFAULT_TEMPLATE\" \\\n    --output-dir \"$PROMPTS_DIR\" \\\n    --title \"$review_title\"\n\n# ───────────────────────────────────────────────────────────\n# 8.  STEP 4 – Offer post‑prompt actions\n# ───────────────────────────────────────────────────────────\nlatest_prompt=$(find \"$PROMPTS_DIR\" -type f -name \"summary_prompt_*.txt\" -printf \"%T@ %p\\n\" \\\n                | sort -nr | head -1 | cut -d' ' -f2-)\n\nif [[ -n \"$latest_prompt\" ]]; then\n  echo -e \"\\n${GREEN}✓ Prompt generated:${NC} $latest_prompt\\n\"\n  echo -e \"${BLUE}Choose an action:${NC}\n  1) View in terminal\n  2) Copy to clipboard\n  3) Open in nano/vim\n  4) Exit\"\n  read -rp \"Selection: \" act\n  case \"$act\" in\n    1) cat \"$latest_prompt\" ;;\n    2) if command -v xclip >/dev/null 2>&1; then\n         xclip -selection clipboard < \"$latest_prompt\"\n         echo -e \"${GREEN}Copied to clipboa",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_229",
    "start_char": 412200,
    "end_char": 414200,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}