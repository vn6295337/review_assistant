{
  "content": "f.chunks)\n\n    def setup(self):\n        if not self._load_chunks(): return False\n        self.store = VectorStore(self.chunks, self.meta)\n        return True\n\n    def ask(self, q, k=3):\n        if not self.store: return \"Assistant not initialised.\"\n        results = self.store.search(q, k)\n        if not results: return \"No relevant information found.\"\n        ans = \"Based on the codebase:\\n\\n\"\n        for txt, meta, sim in results:\n            ans += f\"From **{meta['source']}** (similarityâ€¯{sim:.2f}):\\n```python\\n{txt.strip()}\\n```\\n\\n\"\n        ans += \"\\nFollowâ€‘ups you might ask:\\nâ€¢ Usage of these classes/functions?\\nâ€¢ Key dependencies?\\n\"\n        return ans\n\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n# 4. CLI\n# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\ndef main():\n    p = argparse.ArgumentParser(description=\"Simple (dependencyâ€‘free) RAG assistant\")\n    p.add_argument(\"--chunks-dir\", default=CHUNKS_DIR_DEFAULT, help=\"Directory with *.json chunks\")\n    args = p.parse_args()\n\n    assistant = SimpleRAGAssistant(args.chunks_dir)\n    if not assistant.setup(): sys.exit(1)\n\n    print(\"\\nðŸ”¸ RAG assistant ready.  Type your question, or 'exit'.\")\n    while True:\n        try:\n            q = input(\"\\nQuestion> \").strip()\n            if q.lower() in {\"exit\", \"quit\"}: break\n            if q: print(\"\\n\" + assistant.ask(q))\n        except (KeyboardInterrupt, EOFError):\n            break\n    print(\"ðŸ‘‹ Goodbye!\")\n\nif __name__ == \"__main__\":\n    main()\n2â€¯Â·â€¯sbert_rag_assistant.py  (formerly rag_assistant.py)\n#!/usr/bin/env python3\n\"\"\"\nSBERTâ€‘powered RAG Assistant\n---------------------------\nRequires: sentence-transformers, torch (heavy).\n\nUsage:\n  ./sbert_rag_assistant.py                # uses CHUNKS_DIR from config.sh\n  ./sbert_rag_assistant.py --chunks-dir ./my_chunks --top-k 8\n\"\"\"\n\nimport argparse, json, os\nfrom pathlib import Path\n\n# Grab default CHUNKS_DIR from config.sh if present\nCFG = Path(__file__).resolve().parents[1] / \"scripts\" / \"config.",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_242",
    "start_char": 435600,
    "end_char": 437600,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}