{
  "content": "easy provenance tracking, and incremental processing.\n--append-mode flag\tLets you re‑run the chunker without overwriting chunks you already generated.\nGraceful CLI defaults (--output-dir falls back to CHUNKS_DIR)\tNo more hard‑coding paths when you run ad‑hoc.\nClean, typed functions (chunk_text, write_chunks)\tEasier to unit‑test or import from other scripts later.\nVerbose progress messages\tQuickly see what’s being skipped or saved.\nFeel free to test it:\n\ncd review_assistant/python\npython3 file_chunker.py -i /path/to/large_file.py -v --append-mode\nIt should write JSON chunks into outputs/chunks/ (or wherever you override with --output-dir) and skip any duplicates on subsequent runs.\n\nLet me know if you want tweaks (e.g., different metadata fields, progress bars) or similar refactors for file_summarizer.py and friends!\n\nYou said:\nsimilarly refactor mcp_helper.py in the same folder:\n#!/usr/bin/env python3\n\"\"\"\nMaster Content Prompt Helper\n\nThis script processes summarized chunks and creates a comprehensive prompt\nthat can be used with AI assistants. It's part of a local RAG workflow.\n\"\"\"\n\nimport os\nimport json\nimport argparse\nimport glob\nimport datetime\n\n\ndef load_template(template_file):\n    \"\"\"\n    Load a prompt template from a file.\n    \n    Args:\n        template_file (str): Path to the template file\n        \n    Returns:\n        str: Template content or None if error\n    \"\"\"\n    try:\n        with open(template_file, 'r', encoding='utf-8') as f:\n            return f.read()\n    except Exception as e:\n        print(f\"⚠ Error loading template: {str(e)}\")\n        return None\n\n\ndef load_summaries(summaries_dir):\n    \"\"\"\n    Load all summary files from a directory.\n    \n    Args:\n        summaries_dir (str): Directory containing summary files\n        \n    Returns:\n        list: List of summary dictionaries or [] if error\n    \"\"\"\n    summaries = []\n    \n    try:\n        summary_files = sorted(glob.glob(os.path.join(summaries_dir, \"summary_*.json\")))\n        \n        for sum",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_247",
    "start_char": 444600,
    "end_char": 446600,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}