{
  "content": ": List of summary dictionaries or [] if error\n    \"\"\"\n    summaries = []\n    \n    try:\n        summary_files = sorted(glob.glob(os.path.join(summaries_dir, \"summary_*.json\")))\n        \n        for summary_file in summary_files:\n            with open(summary_file, 'r', encoding='utf-8') as f:\n                summary_data = json.load(f)\n                summaries.append(summary_data)\n                \n        return summaries\n    except Exception as e:\n        print(f\"⚠ Error loading summaries: {str(e)}\")\n        return []\n\n\ndef generate_prompt(template, summaries, title=None):\n    \"\"\"\n    Generate a prompt using a template and summaries.\n    \n    Args:\n        template (str): Template string with placeholders\n        summaries (list): List of summary dictionaries\n        title (str): Optional title override\n        \n    Returns:\n        str: Generated prompt or None if error\n    \"\"\"\n    try:\n        # Extract summary texts\n        summary_texts = []\n        for summary in summaries:\n            if \"summary\" in summary:\n                summary_texts.append(summary[\"summary\"])\n        \n        # Join summary texts\n        joined_summaries = \"\\n\\n---\\n\\n\".join(summary_texts)\n        \n        # Generate default title if not provided\n        if not title:\n            timestamp = datetime.datetime.now().strftime(\"%Y-%m-%d\")\n            title = f\"Content Analysis {timestamp}\"\n        \n        # Replace template placeholders\n        prompt = template.replace(\"{summaries}\", joined_summaries)\n        prompt = prompt.replace(\"{title}\", title)\n        \n        return prompt\n    except Exception as e:\n        print(f\"⚠ Error generating prompt: {str(e)}\")\n        return None\n\n\ndef save_prompt(prompt, output_dir):\n    \"\"\"\n    Save a prompt to a file with timestamp.\n    \n    Args:\n        prompt (str): Prompt content\n        output_dir (str): Directory to save the prompt\n        \n    Returns:\n        str: Path to saved file or None if error\n    \"\"\"\n    try:\n        os.makedirs(output_",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_248",
    "start_char": 446400,
    "end_char": 448400,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}