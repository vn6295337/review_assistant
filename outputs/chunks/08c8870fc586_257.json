{
  "content": "lumn(db.DateTime, default=now_ist)\n\n    items = db.relationship('OrderItem', backref='order', lazy=True)\n\n    def to_dict(self) -> Dict[str, Any]:\n        return {\n            'id': self.id,\n            'user_id': self.user_id,\n            'status': self.status,\n            'total_amount': self.total_amount,\n            'created_at': self.created_at.isoformat(),\n            'items': [item.to_dict() for item in self.items]\n        }\n\n    def __repr__(self) -> str:\n        return f\"<Order {self.id} Status: {self.status} Total: {self.total_amount}>\"\n\nclass OrderItem(db.Model):\n    \"\"\"Order item for linking products to orders.\"\"\"\n\n    id = db.Column(db.Integer, primary_key=True)\n    order_id = db.Column(db.Integer, db.ForeignKey('order.id'), nullable=False)\n    product_id = db.Column(db.Integer, db.ForeignKey('product.id'), nullable=False)\n    quantity = db.Column(db.Integer, nullable=False)\n    price_at_time = db.Column(db.Float, nullable=False)  # Price when ordered\n\n    def to_dict(self) -> Dict[str, Any]:\n        return {\n            'id': self.id,\n            'order_id': self.order_id,\n            'product_id': self.product_id,\n            'quantity': self.quantity,\n            'price_at_time': self.price_at_time\n        }\n\n    def __repr__(self) -> str:\n        return f\"<OrderItem {self.id} Product: {self.product_id} Qty: {self.quantity}>\"\nðŸ“¦ Additional Setup\nIf you havenâ€™t already, install pytz:\n\npip install pytz\nLet me know if you'd like to:\n\nStore time in UTC but display in IST?\n\nAutomatically convert for frontend use?\n\nAdd timezone-aware timestamps in SQLite or Postgres?\n\nYou said:\nhow about auth.py\n\"\"\"\nAuthentication module for user login and JWT token management.\n\"\"\"\nimport jwt\nimport datetime\nfrom werkzeug.security import check_password_hash\nfrom .models import User\n\n# Secret key for JWT encoding/decoding\nSECRET_KEY = \"development-secret-key\"  # Should be in environment variables in production\n\ndef authenticate_user(username, password):\n    \"\"\"\n    Verify us",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_257",
    "start_char": 462600,
    "end_char": 464600,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}