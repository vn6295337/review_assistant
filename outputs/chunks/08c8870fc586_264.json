{
  "content": "st\nimport jwt\nfrom datetime import datetime, timedelta\nfrom unittest.mock import patch\nfrom app.auth import create_jwt_token, decode_jwt_token\n\nclass TestAuth(unittest.TestCase):\n\n    @patch.dict('os.environ', {'SECRET_KEY': 'test-secret'})\n    def test_create_jwt_token(self):\n        user_id = 123\n        token = create_jwt_token(user_id)\n        decoded = jwt.decode(token, 'test-secret', algorithms=['HS256'])\n        self.assertEqual(decoded['sub'], user_id)\n\n    @patch.dict('os.environ', {'SECRET_KEY': 'test-secret'})\n    def test_decode_jwt_token(self):\n        user_id = 456\n        token = create_jwt_token(user_id)\n        self.assertEqual(decode_jwt_token(token)['sub'], user_id)\n\n        expired = jwt.encode(\n            {\n                'exp': datetime.utcnow() - timedelta(days=1),\n                'iat': datetime.utcnow() - timedelta(days=2),\n                'sub': user_id\n            },\n            'test-secret',\n            algorithm='HS256'\n        )\n        self.assertIsNone(decode_jwt_token(expired))\n\n    @patch.dict('os.environ', {'SECRET_KEY': 'test-secret'})\n    def test_invalid_token(self):\n        self.assertIsNone(decode_jwt_token(\"invalid.token.string\"))\n\nif __name__ == '__main__':\n    unittest.main()\nLet me know if you'd also like to add tests for authenticate_user() (e.g., mocking DB lookups).\n\nYou said:\nok, done. replaced the existing code\nChatGPT said:\nPerfect â€” you're now set up with a cleaner, more secure, and environment-consistent test suite. âœ…\n\nIf you want to go a step further, here are a few optional enhancements you can consider later:\n\nðŸ”’ Optional: Prevent accidental production secret leakage\nUse a default fallback in your auth.py:\n\nimport os\nSECRET_KEY = os.environ.get(\"SECRET_KEY\", \"fallback-dev-key\")\nThis ensures tests donâ€™t break if SECRET_KEY isnâ€™t set (but remember, in production, it must be overridden).\n\nðŸ§ª Optional: Add authenticate_user() tests\nThese would involve mocking the User.query method. I can show you how if you're inte",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_264",
    "start_char": 475200,
    "end_char": 477200,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}