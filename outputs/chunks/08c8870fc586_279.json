{
  "content": "= os.path.join(ROOT_DIR, \"chunks\")\nCHUNKS_OUTPUT_DIR = os.path.join(ROOT_DIR, \"outputs/chunks\")\nPROMPTS_DIR = os.path.join(ROOT_DIR, \"outputs/prompts\")\n\ndef print_section_header(title):\n    \"\"\"Print a section header.\"\"\"\n    print(f\"\\n# ================================================================================\")\n    print(f\"{title}\\n\")\n\ndef check_directory(dir_path, required=True):\n    \"\"\"Check if a directory exists and print the result.\"\"\"\n    if os.path.isdir(dir_path):\n        print(f\"✓ Directory exists: {dir_path}\")\n        return True\n    else:\n        status = \"❌\" if required else \"⚠\"\n        print(f\"{status} Directory does not exist: {dir_path}\")\n        return False\n\ndef check_file(file_path, required=True):\n    \"\"\"Check if a file exists and print the result.\"\"\"\n    if os.path.isfile(file_path):\n        print(f\"✓ File exists: {file_path}\")\n        return True\n    else:\n        status = \"❌\" if required else \"⚠\"\n        print(f\"{status} File does not exist: {file_path}\")\n        return False\n\ndef check_json_file(file_path):\n    \"\"\"Check if a file contains valid JSON and print contents.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as f:\n            data = json.load(f)\n            print(f\"✓ Valid JSON found in {file_path}\")\n            print(f\"ℹ {os.path.basename(file_path)} content keys: {', '.join(data.keys())}\")\n            \n            # Print each key-value pair (truncated if large)\n            for key, value in data.items():\n                if isinstance(value, str) and len(value) > 500:\n                    value_preview = value[:500] + \"...\"\n                else:\n                    value_preview = value\n                print(f\"ℹ   {key}: {value_preview}\")\n            \n            return data\n    except json.JSONDecodeError:\n        print(f\"❌ Invalid JSON in {file_path}\")\n        return None\n    except Exception as e:\n        print(f\"❌ Error reading {file_path}: {str(e)}\")\n        return None\n\ndef list_directory_files(dir_path, pat",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_279",
    "start_char": 502200,
    "end_char": 504200,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}