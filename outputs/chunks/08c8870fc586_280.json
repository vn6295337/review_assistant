{
  "content": "int(f\"❌ Invalid JSON in {file_path}\")\n        return None\n    except Exception as e:\n        print(f\"❌ Error reading {file_path}: {str(e)}\")\n        return None\n\ndef list_directory_files(dir_path, pattern=\"*\", max_display=5):\n    \"\"\"List files in a directory matching a pattern.\"\"\"\n    files = glob.glob(os.path.join(dir_path, pattern))\n    \n    if files:\n        print(f\"✓ Found {len(files)} files in {dir_path}\")\n        for i, file in enumerate(sorted(files)):\n            if i < max_display:\n                print(f\"ℹ   - {os.path.basename(file)}\")\n            elif i == max_display:\n                remaining = len(files) - max_display\n                print(f\"ℹ   ... and {remaining} more\")\n        return files\n    else:\n        print(f\"⚠ No files matching {pattern} found in {dir_path}\")\n        return []\n\ndef check_template_variables(template_path):\n    \"\"\"Check template file for variables and substitution.\"\"\"\n    try:\n        with open(template_path, 'r', encoding='utf-8') as f:\n            content = f.read()\n            \n        # Find template variables using regex pattern {variable_name}\n        import re\n        variables = re.findall(r'\\{([a-zA-Z0-9_]+)\\}', content)\n        unique_vars = list(set(variables))\n        \n        if unique_vars:\n            print(f\"✓ Found {len(unique_vars)} template variables: {', '.join(unique_vars)}\")\n        else:\n            print(\"⚠ No template variables found in template file\")\n            \n        return unique_vars\n    except Exception as e:\n        print(f\"❌ Error analyzing template file {template_path}: {str(e)}\")\n        return []\n\ndef check_prompt_content(prompt_path):\n    \"\"\"Check content of a generated prompt file.\"\"\"\n    try:\n        with open(prompt_path, 'r', encoding='utf-8') as f:\n            content = f.read()\n            \n        print(f\"ℹ Prompt content (first 500 chars):\\n\")\n        print(content[:500])\n        \n        # Check for unreplaced template variables\n        import re\n        template_vars = re.finda",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_280",
    "start_char": 504000,
    "end_char": 506000,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}