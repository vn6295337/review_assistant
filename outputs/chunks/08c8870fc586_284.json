{
  "content": "') as file:\n            return file.read()\n    except Exception as e:\n        print(f\"Error reading file {file_path}: {e}\")\n        return \"\"\n\ndef process_template(template_path, output_path, context_vars):\n    template_content = read_file(template_path)\n    \n    # Process each context variable\n    for var_name, file_path in context_vars.items():\n        file_content = read_file(file_path)\n        # Replace {{var_name}} with file_content\n        template_content = template_content.replace(f\"{{{{{var_name}}}}}\", file_content)\n    \n    # Write to output file\n    try:\n        os.makedirs(os.path.dirname(output_path), exist_ok=True)\n        with open(output_path, 'w') as file:\n            file.write(template_content)\n        print(f\"Output written to {output_path}\")\n    except Exception as e:\n        print(f\"Error writing to {output_path}: {e}\")\n\ndef main():\n    parser = argparse.ArgumentParser(description='Process a template with context variables')\n    parser.add_argument('--template', required=True, help='Path to template file')\n    parser.add_argument('--output', required=True, help='Path to output file')\n    parser.add_argument('--context', action='append', help='Context variables in format name=file_path')\n    \n    args = parser.parse_args()\n    \n    # Parse context variables\n    context_vars = {}\n    if args.context:\n        for context_arg in args.context:\n            var_name, file_path = context_arg.split('=', 1)\n            context_vars[var_name] = file_path\n    \n    process_template(args.template, args.output, context_vars)\n\nif __name__ == \"__main__\":\n    main()\nChatGPT said:\ntemplate_processor.py is a simple script to replace placeholders in a template file with the contents of other files, writing the filled template to an output file.\n\nDo you need this script?\nIf your workflow requires dynamically generating prompt files or documents by substituting placeholders with file contents, then yes, itâ€™s useful.\n\nThis script is essentially a lightweight template ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_284",
    "start_char": 511200,
    "end_char": 513200,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}