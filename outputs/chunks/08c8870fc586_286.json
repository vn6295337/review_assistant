{
  "content": " need to refactor rag_assistant.sh? below is the script\n#!/bin/bash\n\n# rag_assistant.sh â€” Main entry point for RAG codebase assistant\n# Usage:\n#   ./scripts/rag_assistant.sh          # full mode\n#   ./scripts/rag_assistant.sh --simple # simple mode\n\n# Color codes\nGREEN='\\033[0;32m'\nBLUE='\\033[0;34m'\nRED='\\033[0;31m'\nYELLOW='\\033[0;33m'\nNC='\\033[0m' # No Color\n\n# Locate project root (one level above this script)\nROOT=\"$(cd \"$(dirname \"$0\")/..\" && pwd)\"\nCORE_DIR=\"$ROOT/python\"\nPY_DIR=\"$ROOT/python\"\nOUT_DIR=\"$ROOT/outputs/chunks\"\nSRC_DIR=\"$ROOT/codebase\"\n\n# === SIMPLE MODE ===\nif [[ \"$1\" == \"--simple\" ]]; then\n  echo -e \"${BLUE}=== Simple RAG Mode ===${NC}\"\n  mkdir -p \"$OUT_DIR\"\n  python3 \"$CORE_DIR/file_chunker.py\" \"$SRC_DIR\" --output \"$OUT_DIR\"\n  python3 \"$PY_DIR/simple_rag_assistant.py\" --chunks-dir \"$OUT_DIR\"\n  exit 0\nfi\n\n# === FULL MODE ===\n\necho -e \"${BLUE}==============================================${NC}\"\necho -e \"${BLUE}       Codebase RAG Assistant Setup          ${NC}\"\necho -e \"${BLUE}==============================================${NC}\"\n\necho -e \"\\n${YELLOW}Creating necessary directories...${NC}\"\nmkdir -p \"$OUT_DIR\"\n\n# Check for file_chunker.py\nif [ ! -f \"$CORE_DIR/file_chunker.py\" ]; then\n  echo -e \"${RED}Error: file_chunker.py not found in $CORE_DIR${NC}\"\n  exit 1\nfi\n\n# Check for rag_assistant.py\nif [ ! -f \"$PY_DIR/rag_assistant.py\" ]; then\n  echo -e \"${RED}Error: rag_assistant.py not found in $PY_DIR${NC}\"\n  exit 1\nfi\n\n# Check codebase dir\nif [ ! -d \"$SRC_DIR\" ]; then\n  echo -e \"${RED}Error: Codebase directory $SRC_DIR does not exist!${NC}\"\n  echo -e \"Please create it and add your files.\"\n  exit 1\nfi\n\n# Chunk the source files\necho -e \"\\n${YELLOW}Chunking files in $SRC_DIR...${NC}\"\npython3 \"$CORE_DIR/file_chunker.py\" \"$SRC_DIR\" --output \"$OUT_DIR\" --extensions .py,.js,.html,.css,.md,.txt --chunk-size 500 --overlap 50 --verbose\nif [ $? -ne 0 ]; then\n  echo -e \"${RED}Error: File chunking failed!${NC}\"\n  exit 1\nfi\n\nNUM_CHUNKS=$(ls -1 \"$OUT_DIR\"/*.json 2>/dev",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_286",
    "start_char": 514800,
    "end_char": 516800,
    "created_at": "2025-05-21T07:21:41+00:00"
  }
}