{
  "content": "k and verify the RAG environment\n  clean [--all]         Clean temporary files (--all includes outputs)\n  stats                 Show statistics about chunks and summaries\n  combine FILE1 FILE2   Combine multiple chunk files into single context\n  extract TYPE PATH     Extract key information from file (types: code, doc, summary)\n  regen PATH            Regenerate chunks and summaries for a file\n  optimize FILE         Optimize a file for context window efficiency\n  help                  Show this help message\n\nExamples:\n  $(basename \"$0\") check\n  $(basename \"$0\") clean\n  $(basename \"$0\") stats\n  $(basename \"$0\") combine chunk_1.txt chunk_2.txt > combined.txt\n  $(basename \"$0\") extract code ./my_script.py\n\nEOF\n}\n\n# Check RAG environment\ncheck_environment() {\n  log \"Checking RAG environment...\"\n  \n  # Check for core Python scripts\n  CORE_FILES=(\n    \"$ROOT_DIR/core/file_chunker.py\"\n    \"$ROOT_DIR/core/file_summarizer.py\" \n    \"$ROOT_DIR/core/chunk_searcher.py\"\n    \"$ROOT_DIR/core/mcp_helper.py\"\n    \"$ROOT_DIR/scripts/rag_assistant.sh\"\n  )\n  \n  missing=0\n  for file in \"${CORE_FILES[@]}\"; do\n    if [[ ! -f \"$file\" ]]; then\n      echo \"❌ Missing core file: $file\"\n      missing=$((missing + 1))\n    fi\n  done\n  \n  # Check for Python environment\n  if ! command -v python3 &> /dev/null; then\n    echo \"❌ Python3 not found\"\n    missing=$((missing + 1))\n  else\n    python_version=$(python3 --version)\n    echo \"✅ $python_version found\"\n  fi\n  \n  # Check directory structure\n  for dir in \"$CHUNKS_DIR\" \"$SUMMARIES_DIR\" \"$PROMPTS_DIR\"; do\n    if [[ -d \"$dir\" ]]; then\n      echo \"✅ Directory exists: $(basename \"$dir\")\"\n    else\n      echo \"❌ Missing directory: $(basename \"$dir\")\"\n      missing=$((missing + 1))\n    fi\n  done\n  \n  if [[ $missing -eq 0 ]]; then\n    echo \"✅ RAG environment check passed.\"\n  else\n    echo \"❌ RAG environment check failed with $missing issues.\"\n    return 1\n  fi\n}\n\n# Clean temporary files\nclean_temp_files() {\n  log \"Cleaning temporary files...\"\n  \n  # Always cl",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_297",
    "start_char": 534600,
    "end_char": 536600,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}