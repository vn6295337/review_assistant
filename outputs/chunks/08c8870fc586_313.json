{
  "content": "──────────────────────────────────────────────────────\n# 4. Display result\n# ───────────────────────────────────────────────────────────\nif [[ -f \"$PROMPT_OUT\" ]]; then\n  echo -e \"\\n${GREEN}✅ Prompt saved to: $PROMPT_OUT${NC}\"\n  echo -e \"\\n${CYAN}Preview (first 30 lines):${NC}\\n\"\n  head -n30 \"$PROMPT_OUT\"\nelse\n  echo -e \"${RED}❌ Failed to create prompt.${NC}\"\n  exit 1\nfi\nWhat Changed\nArea\tImprovement\nConfiguration\tNow loads config.sh for all paths & settings\nStructure\tWrapped logic in functions for clarity\nUser Input\tprompt_input handles defaults and blank inputs\nTemplate Call\tUses updated mcp_helper.py CLI flags\nColors & UX\tConsistent ANSI colors and messaging\nError Handling\tExits early with error if no summaries found\nSave this as generated_structured_prompt.sh, make it executable (chmod +x), and you’ll have a robust, maintainable helper for creating structured prompts.\n\nYou said:\nhow about debug.sh\n\n#!/bin/bash\n\n# This script checks your RAG setup directory structure\n# and attempts to identify issues with paths and files\n\necho \"=== RAG Directory Structure Checker ===\"\necho \"Current directory: $(pwd)\"\n\n# Function to check if a directory exists\ncheck_dir() {\n    if [ -d \"$1\" ]; then\n        echo \"✅ Directory exists: $1\"\n        ls -la \"$1\" | head -n 10\n    else\n        echo \"❌ Directory does not exist: $1\"\n    fi\n    echo \"\"\n}\n\n# Function to check if a file exists\ncheck_file() {\n    if [ -f \"$1\" ]; then\n        echo \"✅ File exists: $1\"\n        echo \"File size: $(du -h \"$1\" | cut -f1)\"\n    else\n        echo \"❌ File does not exist: $1\"\n    fi\n    echo \"\"\n}\n\n# Check main directories\necho \"--- Checking main directories ---\"\ncheck_dir \".\"\ncheck_dir \"./scripts\"\ncheck_dir \"./prompts\"\ncheck_dir \"./outputs\"\ncheck_dir \"./outputs/chunks\"\ncheck_dir \"./outputs/summaries\"\ncheck_dir \"./codebase\"\n\n# Check main scripts\necho \"--- Checking main scripts ---\"\ncheck_file \"./rag_assistant.sh\"\ncheck_file \"./scripts/file_chunker.py\"\ncheck_file \"./scripts/file_summarizer.py\"\ncheck_file \"./s",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_313",
    "start_char": 563400,
    "end_char": 565400,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}