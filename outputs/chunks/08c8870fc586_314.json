{
  "content": "\"./codebase\"\n\n# Check main scripts\necho \"--- Checking main scripts ---\"\ncheck_file \"./rag_assistant.sh\"\ncheck_file \"./scripts/file_chunker.py\"\ncheck_file \"./scripts/file_summarizer.py\"\ncheck_file \"./scripts/chunk_searcher.py\"\ncheck_file \"./scripts/mcp_helper.py\"\n\n# Check for template files\necho \"--- Checking template files ---\"\ncheck_file \"./prompts/code_understanding_template.md\"\ncheck_file \"./prompts/architecture_template.md\"\n\n# Search for Python files in the codebase\necho \"--- Looking for Python files in your codebase ---\"\nfind . -name \"*.py\" -not -path \"*/\\.*\" -not -path \"*/scripts/*\" -not -path \"*/venv/*\" | while read -r file; do\n    echo \"Found Python file: $file\"\n    echo \"File size: $(du -h \"$file\" | cut -f1)\"\ndone\n\n# Check the rag_assistant.sh script contents\necho \"--- Checking rag_assistant.sh script ---\"\nif [ -f \"./rag_assistant.sh\" ]; then\n    echo \"Variables set in rag_assistant.sh:\"\n    grep -E \"^[A-Z_]+=.+\" ./rag_assistant.sh\n    \n    echo \"File chunker command in rag_assistant.sh:\"\n    grep -A 2 \"file_chunker.py\" ./rag_assistant.sh\nfi\n\necho \"--- Debugging complete ---\"\nChatGPT said:\nHere’s a refactored, modular, and colorized version of debug.sh, sourcing your central config.sh and using functions for clarity:\n\n#!/usr/bin/env bash\nset -euo pipefail\n\n# ───────────────────────────────────────────────────────────\n# debug.sh — RAG Directory & Script Checker\n# ───────────────────────────────────────────────────────────\n\n# Load central config\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nsource \"$SCRIPT_DIR/config.sh\"\n\n# Colors\nGREEN='\\033[0;32m'\nRED='\\033[0;31m'\nYELLOW='\\033[1;33m'\nCYAN='\\033[0;36m'\nNC='\\033[0m'\n\nprint_header() {\n  echo -e \"${CYAN}=== RAG Debug Checker ===${NC}\"\n  echo -e \"Project root: ${GREEN}$RAG_ROOT${NC}\"\n  echo\n}\n\ncheck_dir() {\n  local dir=\"$1\"\n  if [[ -d \"$dir\" ]]; then\n    echo -e \"${GREEN}✔ Directory exists:${NC} $dir\"\n    ls -la \"$dir\" 2>/dev/null | head -n10\n  else\n    echo -e \"${RED}✖ Missing directory:${NC} $dir\"",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_314",
    "start_char": 565200,
    "end_char": 567200,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}