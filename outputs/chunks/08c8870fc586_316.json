{
  "content": "not found to inspect.${NC}\"\nfi\necho\n\necho -e \"${GREEN}=== Debug complete ===${NC}\"\nWhat changed:\n\nSourcing your config.sh for all path variables.\n\nColorized output for easier scanning.\n\nFunctions (check_dir, check_file) to avoid repetition.\n\nStrict mode (set -euo pipefail) for safer execution.\n\nScans only your configured directories and scripts, not hardâ€‘coded relative paths.\n\nSave this as debug.sh, make it executable (chmod +x debug.sh), and run it to quickly verify your RAG setup.\n\nYou said:\nhow about rag_menu.sh\n\n#!/bin/bash\n# Complete RAG helper script - configured with all required parameters\n\n# Configuration\nRAG_DIR=\"/mnt/chromeos/removable/USB Drive/review_assistant\"\nSCRIPTS_DIR=\"$RAG_DIR/scripts\"\nCHUNKS_DIR=\"$RAG_DIR/chunks\"\nPROMPTS_DIR=\"$RAG_DIR/outputs/prompts\"\nMCP_DATA_DIR=\"$RAG_DIR/outputs/mcp_data\"  # Directory to store MCP data\n\n# Create directories if they don't exist\nmkdir -p \"$PROMPTS_DIR\"\nmkdir -p \"$MCP_DATA_DIR\"\n\n# Display menu\nshow_menu() {\n  clear\n  echo \"=== RAG Helper Tools ===\"\n  echo \"1) Search chunks\"\n  echo \"2) Work with multi-chunk prompts\"\n  echo \"3) Exit\"\n  echo\n  echo \"Enter your choice (1-3):\"\n}\n\n# Search chunks function\nsearch_chunks() {\n  echo \"Enter your search query:\"\n  read -r QUERY\n  \n  if [ -z \"$QUERY\" ]; then\n    echo \"Error: Search query cannot be empty\"\n    return\n  fi\n  \n  echo \"Searching for: $QUERY\"\n  echo\n  \n  # Navigate to the scripts directory\n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  \n  # Run the search with proper command structure\n  python3 chunk_searcher.py search --query \"$QUERY\" --chunks-dir \"$CHUNKS_DIR\"\n  \n  echo\n  echo \"Press any key to continue...\"\n  read -n 1\n}\n\n# Functions for multi-chunk prompt creation\nlist_prompts() {\n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  python3 mcp_helper.py list --dir \"$MCP_DATA_DIR\"\n}\n\ncreate_new_prompt() {\n  echo \"Enter a name for your new prompt:\"\n  read -r PROMPT_NAME\n  \n  if [ -z \"$PROMPT_NAME\" ]; the",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_316",
    "start_char": 568800,
    "end_char": 570800,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}