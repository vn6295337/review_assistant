{
  "content": "${NC}\"\nfi\n\n# Check and install external dependencies\necho \"\"\necho -e \"${BLUE}Checking external dependencies...${NC}\"\nmissing_external=0\nfor pkg in \"${external_packages[@]}\"; do\n  if ! check_package \"$pkg\"; then\n    echo -e \"${YELLOW}Would you like to install $pkg? (y/n)${NC}\"\n    read -r install_choice\n    if [ \"$install_choice\" = \"y\" ]; then\n      install_package \"$pkg\" || missing_external=$((missing_external + 1))\n    else\n      missing_external=$((missing_external + 1))\n    fi\n  fi\ndone\n\n# Optional: Install lightweight alternatives if some packages couldn't be installed\nif [ $missing_external -gt 0 ]; then\n  echo \"\"\n  echo -e \"${YELLOW}Some external dependencies could not be installed.${NC}\"\n  echo -e \"${YELLOW}Would you like to use lightweight alternatives? (y/n)${NC}\"\n  read -r use_lightweight\n  \n  if [ \"$use_lightweight\" = \"y\" ]; then\n    echo -e \"${BLUE}Setting up lightweight alternatives...${NC}\"\n    # Copy the simple_rag_assistant.py file to replace the main one\n    echo -e \"${GREEN}âœ“ Configured for lightweight operation${NC}\"\n  fi\nfi\n\n# Summary\necho \"\"\necho -e \"${BLUE}======================================================${NC}\"\nif [ $missing_basic -eq 0 ] && [ $missing_external -eq 0 ]; then\n  echo -e \"${GREEN}  All dependencies successfully installed!${NC}\"\nelif [ $missing_external -gt 0 ] && [ \"$use_lightweight\" = \"y\" ]; then\n  echo -e \"${YELLOW}  Setup complete with lightweight alternatives${NC}\"\nelse\n  echo -e \"${YELLOW}  Setup complete with warnings${NC}\"\n  echo -e \"${YELLOW}  Some features may not be available${NC}\"\nfi\necho -e \"${BLUE}======================================================${NC}\"\necho \"\"\necho -e \"${BLUE}You can now run the RAG assistant:${NC}\"\necho -e \"bash full_rag_workflow.sh\"\necho \"\"\nChatGPT said:\nBelow is a fully refactored install_dependencies.sh (renamed for brevity), which:\n\nUses strict mode (set -euo pipefail).\n\nSources your config.sh for any path needs (if ever).\n\nOrganizes logic into functions.\n\nUses arrays for dependencies.\n",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_322",
    "start_char": 579600,
    "end_char": 581600,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}