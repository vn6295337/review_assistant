{
  "content": "nt(f\"⚠ Error saving prompt: {e}\")\n        return None\n\n\ndef main() -> int:\n    parser = argparse.ArgumentParser(description=\"Generate a master prompt from summarized chunks\")\n    parser.add_argument(\"--summaries-dir\", type=Path, default=DEFAULT_SUMMARIES_DIR,\n                        help=\"Directory containing summary files\")\n    parser.add_argument(\"--template-file\", type=Path, required=True,\n                        help=\"Path to the template file\")\n    parser.add_argument(\"--output-dir\", type=Path, default=DEFAULT_PROMPTS_DIR,\n                        help=\"Directory to save the prompt\")\n    parser.add_argument(\"--title\", type=str, default=None,\n                        help=\"Optional title to override the default\")\n    parser.add_argument(\"--verbose\", \"-v\", action=\"store_true\",\n                        help=\"Enable verbose output\")\n    args = parser.parse_args()\n\n    if args.verbose:\n        print(f\"→ Using summaries from: {args.summaries_dir}\")\n        print(f\"→ Using template: {args.template_file}\")\n        print(f\"→ Output will be saved to: {args.output_dir}\")\n\n    template = load_template(args.template_file)\n    if not template:\n        return 1\n\n    summaries = load_summaries(args.summaries_dir, verbose=args.verbose)\n    if not summaries:\n        print(\"❌ No summaries loaded\")\n        return 1\n\n    prompt = generate_prompt(template, summaries, title=args.title)\n    if not prompt:\n        print(\"❌ Failed to generate prompt\")\n        return 1\n\n    output_file = save_prompt(prompt, args.output_dir)\n    if not output_file:\n        print(\"❌ Failed to save prompt\")\n        return 1\n\n    print(f\"✓ Prompt saved: {output_file}\")\n    return 0\n\n\nif __name__ == \"__main__\":\n    raise SystemExit(main())\nChatGPT said:\nWhy you’re seeing JSON fragments in the prompt\nfile_summarizer.py currently copies the entire raw chunk text into\nplain_text_summary.\nBecause some of your chunks — for example, the one that contains the\nfull_rag_workflow.sh script — start with lines that look exa",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_336",
    "start_char": 604800,
    "end_char": 606800,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}