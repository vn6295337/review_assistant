{
  "content": "escription=\"Export the latest prompt summary to a chosen format\")\n    parser.add_argument(\"--output-dir\", type=Path, default=DEFAULT_EXPORT_DIR,\n                        help=\"Directory to save exported chat\")\n    parser.add_argument(\"--format\", choices=[\"txt\", \"md\", \"json\"], default=\"txt\",\n                        help=\"Export format (txt, md, json)\")\n    parser.add_argument(\"--title\", type=str, default=\"Chat Export\",\n                        help=\"Title for the export\")\n    parser.add_argument(\"--verbose\", \"-v\", action=\"store_true\",\n                        help=\"Enable verbose logging\")\n    args = parser.parse_args()\n\n    try:\n        latest_prompt = find_latest_prompt_file(DEFAULT_PROMPTS_DIR)\n        if args.verbose:\n            print(f\"üìÑ Latest prompt found: {latest_prompt.name}\")\n        clean_output_dir(args.output_dir, verbose=args.verbose)\n        export_prompt(latest_prompt, args.output_dir, args.format, args.title, verbose=args.verbose)\n    except Exception as e:\n        print(f\"‚ùå Error: {e}\")\n        return 1\n\n    return 0\n\n\nif __name__ == \"__main__\":\n    raise SystemExit(main())\n‚úÖ Example usage\npython3 chat_exporter.py --format md --title \"Chat Summary May 20\" --verbose\nThis will:\n\nLoad the latest summary_prompt_*.txt\n\nWipe outputs/exports/ clean\n\nExport the content to outputs/exports/Chat_Summary_May_20.md\n\nLet me know if you‚Äôd like it to also:\n\nParse and extract only the {summaries} block\n\nInclude a timestamp in the export file\n\nAutomatically open the export after saving (if possible on your setup)\n\nYou said:\nThis is the original codebase for chat_exporter.py. Refactor it so that everytime I run this, everything should start from a clean slate\n\n#!/usr/bin/env python3\n\"\"\"\nChat Exporter for Claude Sessions\n\nThis script exports the current Claude chat session to a text file\nthat can be processed by the RAG assistant tools.\n\nUsage:\n1. Copy this entire script\n2. Save it to your Chromebook\n3. Run it with Python 3\n4. Follow the prompts to copy-paste the chat co",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_344",
    "start_char": 619200,
    "end_char": 621200,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}