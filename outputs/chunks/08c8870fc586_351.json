{
  "content": "\n            messages.append({\"role\": \"assistant\", \"content\": claude_parts[i].strip()})\n    return messages\n\n\ndef format_as_markdown(messages, title=\"Claude Chat Export\"):\n    now = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    output = f\"# {title}\\n\\n*Exported on: {now}*\\n\\n\"\n    for msg in messages:\n        output += f\"## {msg['role'].capitalize()}\\n\\n{msg['content']}\\n\\n---\\n\\n\"\n    return output\n\n\ndef format_as_text(messages, title=\"Claude Chat Export\"):\n    now = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    output = f\"{title}\\nExported on: {now}\\n\\n\"\n    for msg in messages:\n        output += f\"{msg['role'].capitalize()}:\\n{msg['content']}\\n\\n{'-'*80}\\n\\n\"\n    return output\n\n\ndef save_chat(messages, output_format, output_dir, title):\n    if not title:\n        title = \"Claude Chat Export\"\n\n    safe_title = re.sub(r'[^\\w\\s-]', '', title).strip().replace(' ', '_')\n    timestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n    filename = f\"{safe_title}_{timestamp}\"\n\n    if output_format == 'json':\n        filepath = os.path.join(output_dir, f\"{filename}.json\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            json.dump({\"title\": title, \"messages\": messages}, f, indent=2)\n    elif output_format == 'md':\n        filepath = os.path.join(output_dir, f\"{filename}.md\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            f.write(format_as_markdown(messages, title))\n    else:\n        filepath = os.path.join(output_dir, f\"{filename}.txt\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            f.write(format_as_text(messages, title))\n\n    return filepath\n\n\ndef extract_code_snippets(messages, output_dir):\n    code_dir = os.path.join(output_dir, \"code_snippets\")\n    Path(code_dir).mkdir(exist_ok=True)\n    code_pattern = r'```(\\w*)\\n(.*?)\\n```'\n    code_files = []\n\n    for i, msg in enumerate(messages):\n        for j, (lang, code) in enumerate(re.findall(code_pattern, msg[\"content\"], re.DOTALL)):\n",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_351",
    "start_char": 631800,
    "end_char": 633800,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}