{
  "content": "ng, help messages, titles, and filenames to be neutral.\n\nPreserved functionality: reads from input file, cleans output dir, saves chat and code.\n\n‚úÖ Updated Script: chat_exporter.py (Generic Version)\n#!/usr/bin/env python3\n\"\"\"\nGeneric Chat Exporter\n\nThis script exports a chat session (formatted with \"Human:\" and \"Assistant:\") from a text/markdown file into structured formats.\n\nUsage:\npython3 chat_exporter.py --input-file <path> [--output-dir <path>] [--format txt|md|json] [--title \"Session Title\"]\n\"\"\"\n\nimport os\nimport re\nimport json\nimport shutil\nimport datetime\nimport argparse\nfrom pathlib import Path\n\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description='Export chat transcript from file to structured format.')\n    parser.add_argument('--input-file', type=str, required=True,\n                        help='Path to a file containing the chat transcript')\n    parser.add_argument('--output-dir', type=str,\n                        default='/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions',\n                        help='Directory to save exported files')\n    parser.add_argument('--format', type=str, choices=['txt', 'md', 'json'], default='md',\n                        help='Export format (default: md)')\n    parser.add_argument('--title', type=str, default='',\n                        help='Optional title for the chat session')\n    return parser.parse_args()\n\n\ndef reset_output_directory(output_dir):\n    try:\n        if os.path.exists(output_dir):\n            shutil.rmtree(output_dir)\n        Path(output_dir).mkdir(parents=True, exist_ok=True)\n        print(f\"üßπ Cleaned and recreated output directory: {output_dir}\")\n        return True\n    except Exception as e:\n        print(f\"‚ùå Could not reset output directory: {e}\")\n        return False\n\n\ndef read_chat_from_file(filepath):\n    try:\n        with open(filepath, 'r', encoding='utf-8') as f:\n            return f.read()\n    except Exception as e:\n        print(f\"‚ùå Failed to read input file:",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_357",
    "start_char": 642600,
    "end_char": 644600,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}