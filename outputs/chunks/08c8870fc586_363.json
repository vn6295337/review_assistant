{
  "content": "o file\n3. Prompts the user to paste a copied text\n4. Saves the nano file timestamped in the codebase/chat_session/ folder\n5. RAG workflow continues taking the latest timestamped file from codebase/chat_session \nChatGPT said:\n\nThought for 9 seconds\nBelow is a drop-in replacement for python/chat_exporter.py that follows the\nexact sequence you requested:\n\nUser runs the script from the python/ folder.\n\nIt opens a blank nano buffer.\n\nUser pastes the copied chat text and exits nano.\n\nThe script saves that text as a timestamped file inside\ncodebase/chat_sessions/.\n\nThe RAG workflow automatically continues:\n\nchunks the new file\n\nsummarises the chunks\n\ntells you where the prompt generation step can be run.\n\n#!/usr/bin/env python3\n\"\"\"\nInteractive Chat Exporter (nano-based) for the RAG workflow.\n\nWorkflow:\n1. Launches a blank nano buffer for the user to paste chat text.\n2. Saves the buffer to codebase/chat_sessions/Chat_<timestamp>.txt\n3. Runs file_chunker.py → outputs/chunks/\n4. Runs file_summarizer.py → outputs/summaries/\n\"\"\"\n\nimport os\nimport subprocess\nimport shutil\nimport datetime\nfrom pathlib import Path\nimport argparse\nimport sys\n\n\n# ──────────────────────────  CONFIG  ──────────────────────────\nPROJECT_ROOT = Path(__file__).resolve().parent.parent\nCODEBASE_DIR = PROJECT_ROOT / \"codebase\" / \"chat_sessions\"\nCHUNKS_DIR = PROJECT_ROOT / \"outputs\" / \"chunks\"\nSUMMARIES_DIR = PROJECT_ROOT / \"outputs\" / \"summaries\"\nPY_DIR = PROJECT_ROOT / \"python\"\n\nFILE_CHUNKER = PY_DIR / \"file_chunker.py\"\nFILE_SUMMARIZER = PY_DIR / \"file_summarizer.py\"\n# ──────────────────────────────────────────────────────────────\n\n\ndef open_nano(tmp_file: Path):\n    \"\"\"Open nano for user input; return True if nano exited cleanly.\"\"\"\n    try:\n        subprocess.run([\"nano\", str(tmp_file)])\n        return True\n    except FileNotFoundError:\n        print(\"❌ nano is not installed. Install it with `sudo apt-get install nano`.\")\n        return False\n\n\ndef is_file_nonempty(path: Path) -> bool:\n    return path.exi",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_363",
    "start_char": 653400,
    "end_char": 655400,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}