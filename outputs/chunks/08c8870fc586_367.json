{
  "content": " etc.\n\nThe script will read these from os.environ, assuming config.sh is sourced in the terminal before running the script.\n\n✅ Updated config.sh\nAdd the following below the OUTPUTS_DIR block:\n\n# === Input directory for raw chats ===\nexport CHAT_SESSIONS_DIR=\"${RAG_ROOT}/codebase/chat_sessions\"\nUpdate the directory creation loop to include CHAT_SESSIONS_DIR:\n\nfor dir in \"$CHUNKS_DIR\" \"$SUMMARIES_DIR\" \"$PROMPTS_DIR\" \"$MCP_DATA_DIR\" \"$TEMPLATES_DIR\" \"$CHAT_SESSIONS_DIR\"; do\n  [ -d \"$dir\" ] || mkdir -p \"$dir\"\ndone\nThat’s it. Full updated version of the relevant part (you can copy over your file):\n\n# === Output subdirectories ===\nexport CHUNKS_DIR=\"${OUTPUTS_DIR}/chunks\"\nexport SUMMARIES_DIR=\"${OUTPUTS_DIR}/summaries\"\nexport PROMPTS_DIR=\"${OUTPUTS_DIR}/prompts\"\nexport MCP_DATA_DIR=\"${OUTPUTS_DIR}/mcp_data\"\n\n# === Input directory for raw chats ===\nexport CHAT_SESSIONS_DIR=\"${RAG_ROOT}/codebase/chat_sessions\"\n\n# === Default settings ===\nexport DEFAULT_CHUNK_SIZE=2000\nexport DEFAULT_OVERLAP=200\nexport DEFAULT_TEMPLATE=\"${TEMPLATES_DIR}/summary_prompt_template.md\"\n\n# === Secret key for auth.py ===\nexport SECRET_KEY=\"${SECRET_KEY:-development-secret-key}\"\n\n# === Create directories if they don't exist ===\nfor dir in \"$CHUNKS_DIR\" \"$SUMMARIES_DIR\" \"$PROMPTS_DIR\" \"$MCP_DATA_DIR\" \"$TEMPLATES_DIR\" \"$CHAT_SESSIONS_DIR\"; do\n  [ -d \"$dir\" ] || mkdir -p \"$dir\"\ndone\n✅ Updated chat_exporter.py\nUpdated to dynamically read config from the environment. Here’s the full code:\n\n#!/usr/bin/env python3\n\"\"\"\nchat_exporter.py - Interactive chat session ingestor for the RAG pipeline.\n\n1. Opens a blank nano buffer.\n2. User pastes the chat and exits nano.\n3. The content is saved to codebase/chat_sessions/ as a timestamped file.\n4. The file is passed to file_chunker.py → outputs/chunks/\n5. Then to file_summarizer.py → outputs/summaries/\n\"\"\"\n\nimport os\nimport subprocess\nimport shutil\nimport datetime\nfrom pathlib import Path\nimport argparse\nimport sys\n\n# === Load environment-based configuration ===\ndef ",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_125041.txt",
    "chunk_id": "08c8870fc586_367",
    "start_char": 660600,
    "end_char": 662600,
    "created_at": "2025-05-21T07:21:42+00:00"
  }
}