{
  "content": "or automation.\n\nUse functions and group related logic.\n\nRefactored version example:\n#!/bin/bash\n\n# check_python_env.sh - Script to check Python environment and path settings\n\nGREEN='\\033[0;32m'\nBLUE='\\033[0;34m'\nRED='\\033[0;31m'\nYELLOW='\\033[0;33m'\nNC='\\033[0m' # No Color\n\nprint_header() {\n  echo -e \"${BLUE}==============================================${NC}\"\n  echo -e \"${BLUE}       Checking Python Environment           ${NC}\"\n  echo -e \"${BLUE}==============================================${NC}\"\n}\n\nprint_footer() {\n  echo -e \"${BLUE}==============================================${NC}\"\n  echo -e \"${BLUE}       Environment Check Complete             ${NC}\"\n  echo -e \"${BLUE}==============================================${NC}\"\n}\n\ncheck_package_installed() {\n  local pkg=$1\n  echo -e \"\\n${YELLOW}Checking for $pkg:${NC}\"\n  if python3 -m pip list | grep -q \"$pkg\"; then\n    echo -e \"${GREEN}$pkg is installed${NC}\"\n  else\n    echo -e \"${RED}$pkg not found in pip list${NC}\"\n  fi\n}\n\ntest_import() {\n  local module=$1\n  echo -n \"$module: \"\n  if python3 -c \"import $module; print('OK')\" 2>/dev/null; then\n    echo -e \"${GREEN}Available${NC}\"\n    return 0\n  else\n    echo -e \"${RED}Not available${NC}\"\n    return 1\n  fi\n}\n\nprint_header\n\necho -e \"\\n${YELLOW}Python version:${NC}\"\npython3 --version\n\necho -e \"\\n${YELLOW}Python path:${NC}\"\nwhich python3\n\necho -e \"\\n${YELLOW}Pip path:${NC}\"\nwhich pip3\n\necho -e \"\\n${YELLOW}PYTHONPATH environment variable:${NC}\"\necho \"${PYTHONPATH:-<not set>}\"\n\n# Check packages\ncheck_package_installed numpy\ncheck_package_installed sentence-transformers\n\necho -e \"\\n${YELLOW}Testing imports:${NC}\"\ntest_import numpy || exit 1\ntest_import sentence_transformers || exit 1\n\n# Test numpy functionality\necho -e \"\\n${YELLOW}Testing numpy functionality:${NC}\"\npython3 -c \"\ntry:\n    import numpy as np\n    arr = np.array([1, 2, 3])\n    print(f'Created array: {arr}')\n    print('Numpy is working correctly')\nexcept Exception as e:\n    print(f'Error with numpy: {e}')\n    exit",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_113849.txt",
    "chunk_id": "27d703671f2d_100",
    "start_char": 180000,
    "end_char": 182000,
    "created_at": "2025-05-21T06:08:50+00:00"
  }
}