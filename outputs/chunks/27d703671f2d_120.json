{
  "content": "ctory & Script Checker\n# ───────────────────────────────────────────────────────────\n\n# Load central config\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nsource \"$SCRIPT_DIR/config.sh\"\n\n# Colors\nGREEN='\\033[0;32m'\nRED='\\033[0;31m'\nYELLOW='\\033[1;33m'\nCYAN='\\033[0;36m'\nNC='\\033[0m'\n\nprint_header() {\n  echo -e \"${CYAN}=== RAG Debug Checker ===${NC}\"\n  echo -e \"Project root: ${GREEN}$RAG_ROOT${NC}\"\n  echo\n}\n\ncheck_dir() {\n  local dir=\"$1\"\n  if [[ -d \"$dir\" ]]; then\n    echo -e \"${GREEN}✔ Directory exists:${NC} $dir\"\n    ls -la \"$dir\" 2>/dev/null | head -n10\n  else\n    echo -e \"${RED}✖ Missing directory:${NC} $dir\"\n  fi\n  echo\n}\n\ncheck_file() {\n  local file=\"$1\"\n  if [[ -f \"$file\" ]]; then\n    echo -e \"${GREEN}✔ File exists:${NC} $file\"\n    echo \"   Size: $(du -h \"$file\" | cut -f1)\"\n  else\n    echo -e \"${RED}✖ Missing file:${NC} $file\"\n  fi\n  echo\n}\n\n# ───────────────────────────────────────────────────────────\n# Main\n# ───────────────────────────────────────────────────────────\nprint_header\n\necho -e \"${YELLOW}-- Checking core directories --${NC}\"\ncheck_dir \"$SCRIPTS_DIR\"\ncheck_dir \"$TEMPLATES_DIR\"\ncheck_dir \"$OUTPUTS_DIR\"\ncheck_dir \"$CHUNKS_DIR\"\ncheck_dir \"$SUMMARIES_DIR\"\ncheck_dir \"$PROMPTS_DIR\"\ncheck_dir \"$ROOT/codebase\"\n\necho -e \"${YELLOW}-- Checking core scripts --${NC}\"\ncheck_file \"$SCRIPTS_DIR/rag_assistant.sh\"\ncheck_file \"$PYTHON_DIR/file_chunker.py\"\ncheck_file \"$PYTHON_DIR/file_summarizer.py\"\ncheck_file \"$PYTHON_DIR/chunk_searcher.py\"\ncheck_file \"$PYTHON_DIR/mcp_helper.py\"\n\necho -e \"${YELLOW}-- Checking template files --${NC}\"\ncheck_file \"$TEMPLATES_DIR/summary_prompt_template.md\"\ncheck_file \"$TEMPLATES_DIR/structured_prompt_template.md\"\n\necho -e \"${YELLOW}-- Scanning codebase for Python files --${NC}\"\nfind \"$ROOT/codebase\" -type f -name \"*.py\" ! -path \"*/venv/*\" | while read -r f; do\n  echo -e \"${CYAN}•${NC} $f ($(du -h \"$f\" | cut -f1))\"\ndone\necho\n\necho -e \"${YELLOW}-- Inspecting rag_assistant.sh variables --${NC}\"\nif [[ -f \"$SCRIPTS_DIR/rag_assis",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_113849.txt",
    "chunk_id": "27d703671f2d_120",
    "start_char": 216000,
    "end_char": 218000,
    "created_at": "2025-05-21T06:08:50+00:00"
  }
}