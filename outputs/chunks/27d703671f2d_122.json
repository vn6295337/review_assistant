{
  "content": "cho\n  \n  # Navigate to the scripts directory\n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  \n  # Run the search with proper command structure\n  python3 chunk_searcher.py search --query \"$QUERY\" --chunks-dir \"$CHUNKS_DIR\"\n  \n  echo\n  echo \"Press any key to continue...\"\n  read -n 1\n}\n\n# Functions for multi-chunk prompt creation\nlist_prompts() {\n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  python3 mcp_helper.py list --dir \"$MCP_DATA_DIR\"\n}\n\ncreate_new_prompt() {\n  echo \"Enter a name for your new prompt:\"\n  read -r PROMPT_NAME\n  \n  if [ -z \"$PROMPT_NAME\" ]; then\n    echo \"Error: Prompt name cannot be empty\"\n    return\n  fi\n  \n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  python3 mcp_helper.py create \"$PROMPT_NAME\" --dir \"$MCP_DATA_DIR\"\n}\n\nadd_context_to_prompt() {\n  echo \"First, let's list your available prompts:\"\n  list_prompts\n  \n  echo\n  echo \"Enter the name of the prompt to add context to:\"\n  read -r PROMPT_NAME\n  \n  if [ -z \"$PROMPT_NAME\" ]; then\n    echo \"Error: Prompt name cannot be empty\"\n    return\n  fi\n  \n  echo \"Now search for chunks to add:\"\n  echo \"Enter your search query:\"\n  read -r QUERY\n  \n  if [ -z \"$QUERY\" ]; then\n    echo \"Error: Search query cannot be empty\"\n    return\n  fi\n  \n  cd \"$SCRIPTS_DIR\" || { echo \"Error: Scripts directory not found\"; return; }\n  # First search for chunks\n  python3 chunk_searcher.py search --query \"$QUERY\" --chunks-dir \"$CHUNKS_DIR\"\n  \n  echo\n  echo \"Enter the path of the chunk you want to add (or leave empty to cancel):\"\n  read -r CHUNK_PATH\n  \n  if [ -z \"$CHUNK_PATH\" ]; then\n    echo \"No chunk selected, returning to menu.\"\n    return\n  fi\n  \n  # Add the context to the prompt\n  python3 mcp_helper.py add-context \"$PROMPT_NAME\" \"$CHUNK_PATH\" --dir \"$MCP_DATA_DIR\"\n}\n\ngenerate_prompt() {\n  echo \"First, let's list your available prompts:\"\n  list_prompts\n  \n  echo\n  echo \"Enter the name of the prompt to generate:\"\n  read -r PROMP",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_113849.txt",
    "chunk_id": "27d703671f2d_122",
    "start_char": 219600,
    "end_char": 221600,
    "created_at": "2025-05-21T06:08:50+00:00"
  }
}