{
  "content": "encoding='utf-8') as f:\n            f.write(format_as_markdown(messages, title))\n    else:\n        filepath = os.path.join(output_dir, f\"{filename}.txt\")\n        with open(filepath, 'w', encoding='utf-8') as f:\n            f.write(format_as_text(messages, title))\n\n    return filepath\n\n\ndef extract_code_snippets(messages, output_dir):\n    code_dir = os.path.join(output_dir, \"code_snippets\")\n    Path(code_dir).mkdir(exist_ok=True)\n    code_pattern = r'```(\\w*)\\n(.*?)\\n```'\n    code_files = []\n\n    for i, msg in enumerate(messages):\n        for j, (lang, code) in enumerate(re.findall(code_pattern, msg[\"content\"], re.DOTALL)):\n            ext = lang if lang else \"txt\"\n            timestamp = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n            filename = f\"snippet_{i}_{j}_{timestamp}.{ext}\"\n            filepath = os.path.join(code_dir, filename)\n            with open(filepath, 'w', encoding='utf-8') as f:\n                f.write(code)\n            code_files.append(filepath)\n    return code_files\n\n\ndef main():\n    args = parse_args()\n\n    if not reset_output_directory(args.output_dir):\n        fallback = os.path.expanduser(\"~/Downloads/chat_exports\")\n        print(f\"⚠ Falling back to: {fallback}\")\n        args.output_dir = fallback\n        reset_output_directory(args.output_dir)\n\n    title = args.title or input(\"Enter a title for this chat export (or press Enter for default): \").strip() or \"Claude Chat Export\"\n    content = get_chat_content()\n    if not content:\n        print(\"❌ No content provided.\")\n        return\n\n    messages = parse_chat(content)\n    if not messages:\n        print(\"❌ Could not parse any messages.\")\n        return\n\n    filepath = save_chat(messages, args.format, args.output_dir, title)\n    code_files = extract_code_snippets(messages, args.output_dir)\n\n    print(\"\\n✅ Export Complete\")\n    print(f\"Chat saved to: {filepath}\")\n    if code_files:\n        print(f\"Extracted {len(code_files)} code snippets to: {os.path.join(args.output_dir, 'code_sn",
  "metadata": {
    "source": "/mnt/chromeos/removable/USB Drive/review_assistant/codebase/chat_sessions/Chat_with_CFO_20250521_113849.txt",
    "chunk_id": "27d703671f2d_157",
    "start_char": 282600,
    "end_char": 284600,
    "created_at": "2025-05-21T06:08:50+00:00"
  }
}